# This is a basic workflow to help you get started with Actions

name: Regression

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push: 
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  pull_request_review:
    types:
      - submitted
  check_suite:
    types:
      - completed
  status: {}
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
    provar_regression:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      env:
        scratch_org_alias: ProvarDX
        provar_major_version: latest
        provar_build_version: latest
        dev_hub_alias: SFDX-ENV
        provar_home: ${{ github.workspace }}/ProvarHome
      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - uses: actions/checkout@v2
        - uses: actions/setup-java@v1
          with:
            java-version: 1.8
        - uses: actions/setup-node@v2.1.2  
        - uses: sfdx-actions/setup-sfdx@v1
          with:
            sfdx-auth-url: force://PlatformCLI::5Aep861NiuQwGoMdl5hGtfykpntgEERUZ.8MAKsPIw_SwXf.EXNL4LEnrA866gd8qpFiFcZGxnydLb4i19Birhc@brave-otter-7uycux-dev-ed.my.salesforce.com

        - name: Setup NPM
          run: npm install

        - name: Install ProvarDX SFDX Plugin
          run: |
            echo y | sfdx plugins:install @provartesting/provardx
            sfdx plugins:update

        - name: Download Provar CLI
          uses: wei/wget@v1.1.1
          with:
            args: -nv https://download.provartesting.com/${{ env.provar_major_version }}/Provar_ANT_${{ env.provar_build_version }}.zip

        - name: Setup Provar CLI
          run: |
            echo "Unzip Provar ANT Files"
            unzip -q Provar_ANT_${{ env.provar_build_version }}.zip -d $GITHUB_WORKSPACE/ProvarHome
            ls -la ${{ env.provar_home }}
            ls -la ${{ env.provar_home }}/provardx
            
        - name: List Authenticated Orgs and Set Default Username
          run: |
            sfdx force:org:list --clean
            sfdx force:config:set defaultdevhubusername=${{ env.dev_hub_alias }} defaultusername=${{ env.dev_hub_alias }} --global
              
        - name: Insert Secrets Password
          run: sed -i "s|ProvarSecretsPassword|Cactusforce2021|" $GITHUB_WORKSPACE/Cactusforce2021/provardx/provardx-properties.json

        - name: Replace Workspace Path
          run: sed -i "s|GITHUBWORKSPACE|$GITHUB_WORKSPACE|" $GITHUB_WORKSPACE/Cactusforce2021/provardx/provardx-properties.json
          
        - name: Create Scratch Org 
          run: |
            sfdx force:org:create -f $GITHUB_WORKSPACE/config/project-scratch-def.json -a ${{ env.scratch_org_alias }}
            sfdx force:org:display -u ${{ env.scratch_org_alias }}

        - name: Push Branch to Scratch Org
          run: |
            sfdx force:source:push -u ${{ env.scratch_org_alias }} -f --json --loglevel fatal

        - name: Validate ProvarDX property file
          run: sfdx provar:validate -p Cactusforce2021/provardx/provardx-properties.json

        - name: Compile Provar Project
          run: sfdx provar:compile -p Cactusforce2021/provardx/provardx-properties.json

        # - name: Reload Metadata Cache
        #   run: sfdx provar:metadatacache -m 'Reload' -c '.provarCaches' -p Cactusforce2021/provardx/provardx-properties.json

        - name: Run Provar Tests
          run: echo y | xvfb-run sfdx provar:runtests -p Cactusforce2021/provardx/provardx-properties.json 

        - name: Delete Scratch Org
          run: sfdx force:org:delete -u ${{ env.scratch_org_alias }} --noprompt
       
        - name: Upload Test Results Folder
          uses: actions/upload-artifact@v2.2.1
          with:
            # Artifact name
            name: TestResults # optional, default is artifact
            # A file, directory or wildcard pattern that describes what to upload
            path: '**/ANT/Results'
            # The desired behavior if no files are found using the provided path.
            if-no-files-found: error
            retention-days: 14 # optional
    test_results:
      name: "Publish Test Results"
      needs: provar_regression
      runs-on: ubuntu-latest
      # the linux_regression job might be skipped, we don't need to run this job then
      if: success() || failure()
      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v2
          with:
            path: artifacts
            
        - name: Publish JUnit Report
          uses: mikepenz/action-junit-report@v2.4.3
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            report_paths: '**/Results/*.xml'
            check_name: "Provar Regression Test Report (JUnit action)"

    automerge:
      needs: test_results
      runs-on: ubuntu-latest
      if: success()
      steps:
        - name: automerge
          uses: "pascalgn/automerge-action@v0.12.0"
          env:
            GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
            MERGE_LABELS: ""
